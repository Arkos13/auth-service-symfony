# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    public_key: '%env(string:OAUTH2_PATH_PUBLIC_KEY)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $mailerSenderAddress: '%env(MAILER_USER)%'
            $esHost: '%env(ELASTICSEARCH_HOST)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Model/User/Entity,Infrastructure/Shared/Persistence/Migrations,Tests,Kernel.php}'

    Elasticsearch\Client:
        factory: ['@App\Infrastructure\Container\ElasticSearchClientFactory', 'create']

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Ports\Rest\Action\:
        resource: '../src/Ports/Rest/Action'
        tags: ['controller.service_arguments']

    _instanceof:
        App\Application\Command\CommandHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        App\Application\Query\QueryHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: query.bus }

        App\Model\Shared\Event\EventHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: event.bus }

###################### Services ################################
    App\Application\Service\PasswordHasher\PasswordHasherInterface: '@App\Application\Service\PasswordHasher\PasswordHasherArgon2i'

    App\Application\Service\User\ConfirmEmailToken\ConfirmEmailTokenFactoryAbstract: '@App\Application\Service\User\ConfirmEmailToken\ConfirmEmailTokenFactory'

    App\Application\Service\User\ConfirmPasswordToken\ConfirmPasswordTokenFactoryAbstract: '@App\Application\Service\User\ConfirmPasswordToken\ConfirmPasswordTokenFactory'

    App\Application\Service\User\Network\OAuth\Fetch\FetchUser:
        arguments:
            $clientRegistry: '@App\Application\Service\OAuth\Client\Registry\ClientRegistry'

    ###################### Handlers ################################

    App\Application\Command\User\Phone\ConfirmCode\Generate\GeneratePhoneConfirmCodeCommandHandler:
        arguments:
            $smsService: '@App\Application\Service\Sms\FakeSmsService'

    ###################### Listeners ################################

    App\Infrastructure\EventListener\OAuth2\UserResolveListener:
        tags:
            - { name: kernel.event_listener, event: trikoder.oauth2.user_resolve, method: onUserResolve }

    App\Infrastructure\Http\RequestDtoResolver:
        tags:
            - { name: controller.request_value_resolver, priority: 50 }

    App\Infrastructure\EventListener\Http\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\Infrastructure\EventListener\User\UserAuthenticatedHistoryListener:
        tags:
            - { name:  kernel.event_listener, event: user.authenticated.history}

    ######################## PhpAmqpLib #######################################

    PhpAmqpLib\Channel\AMQPChannel:
        arguments:
            $connection: '@PhpAmqpLib\Connection\AMQPSocketConnection'
    PhpAmqpLib\Connection\AMQPSocketConnection:
        arguments:
            $host: '%env(AMQP_HOST)%'
            $port: '%env(AMQP_PORT)%'
            $user: '%env(AMQP_USER)%'
            $password: '%env(AMQP_PASSWORD)%'